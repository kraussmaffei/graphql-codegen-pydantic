{"version":3,"file":"graphql-codegen-pydantic.esm.js","sources":["../src/visitor.ts","../src/index.ts"],"sourcesContent":["/* eslint-disable lines-between-class-members */\n/* eslint-disable class-methods-use-this */\n/* eslint-disable react/no-this-in-sfc */\nimport {\n  BaseVisitor,\n  ParsedConfig,\n  buildScalars,\n  indent,\n} from '@graphql-codegen/visitor-plugin-common';\nimport {\n  NamedTypeNode,\n  ListTypeNode,\n  NonNullTypeNode,\n  GraphQLSchema,\n  FieldDefinitionNode,\n  ObjectTypeDefinitionNode,\n  NameNode,\n  UnionTypeDefinitionNode,\n  DocumentNode,\n  InterfaceTypeDefinitionNode,\n  EnumTypeDefinitionNode,\n  InputObjectTypeDefinitionNode,\n  InputValueDefinitionNode,\n} from 'graphql';\nimport { DepGraph } from 'dependency-graph';\n\nimport { PydanticPluginRawConfig } from './config';\n\nexport const PYTHON_SCALARS = {\n  ID: 'str',\n  String: 'str',\n  Boolean: 'bool',\n  Int: 'int',\n  Float: 'float',\n};\n\nconst PYTHON_RESERVED = ['from'];\nconst PYDANTIC_MODEL_RESERVED = ['copy'];\nconst RESERVED = PYTHON_RESERVED.concat(PYDANTIC_MODEL_RESERVED);\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface PydanticPluginParsedConfig extends ParsedConfig {\n  /* intentionally empty for now */\n}\n\nexport class PydanticVisitor extends BaseVisitor<\n  PydanticPluginRawConfig,\n  PydanticPluginParsedConfig\n> {\n  private addOptionalImport = false;\n  private addAnyImport = false;\n  private addListImport = false;\n  private addUnionImport = false;\n  private addEnumImport = false;\n  private addFieldImport = false;\n\n  private graph = new DepGraph({\n    circular: false,\n  });\n\n  constructor(\n    rawConfig: PydanticPluginRawConfig,\n    private schema: GraphQLSchema,\n  ) {\n    super(rawConfig, {\n      // enumValues: rawConfig.enumValues || {},\n      // listType: rawConfig.listType || 'List',\n      // package: rawConfig.package || defaultPackageName,\n      scalars: buildScalars(schema, {}, PYTHON_SCALARS),\n    });\n  }\n\n  public getImports(): string {\n    const typing = [];\n    const pydantic = ['BaseModel'];\n\n    if (this.addAnyImport) {\n      typing.push(`Any`);\n    }\n\n    if (this.addOptionalImport) {\n      typing.push(`Optional`);\n    }\n\n    if (this.addListImport) {\n      typing.push(`List`);\n    }\n\n    if (this.addUnionImport) {\n      typing.push(`Union`);\n    }\n\n    if (this.addFieldImport) {\n      pydantic.push(`Field`);\n    }\n\n    const enumInput = this.addEnumImport ? 'from enum import StrEnum' : '';\n\n    const typingImport = typing.length\n      ? `from typing import ${typing.join(', ')}`\n      : '';\n\n    const pydanticImport = pydantic.length\n      ? `from pydantic import ${pydantic.join(', ')}`\n      : '';\n\n    return [enumInput, typingImport, pydanticImport].filter(i => i).join('\\n');\n  }\n\n  protected canAddGraphNode(id: string): boolean {\n    if (Object.values(this.scalars).includes(id) || id === 'Any') {\n      return false;\n    }\n\n    return true;\n  }\n\n  protected upsertGraphNode(id: string) {\n    if (this.canAddGraphNode(id) && !this.graph.hasNode(id)) {\n      this.graph.addNode(id);\n    }\n  }\n\n  protected addGraphNodeDeps(id: string, ids: string[]) {\n    if (!this.canAddGraphNode(id)) {\n      return;\n    }\n\n    this.upsertGraphNode(id);\n\n    ids.forEach((i: string) => {\n      if (!this.canAddGraphNode(i)) {\n        return;\n      }\n\n      this.upsertGraphNode(i);\n\n      this.graph.addDependency(id, i);\n    });\n  }\n\n  protected clearOptional(str: string): string {\n    if (str.startsWith('Optional[')) {\n      return str.replace(/Optional\\[(.*?)\\]$/, '$1');\n    }\n\n    return str;\n  }\n\n  Name(node: NameNode) {\n    return node.value;\n  }\n\n  NamedType(node: NamedTypeNode) {\n    const { name } = node as any;\n\n    // Scalars\n    if (Object.keys(this.scalars).includes(name)) {\n      const id = this.scalars[name];\n\n      // Special case for any\n      if (id === 'any') {\n        this.addAnyImport = true;\n        return {\n          id: 'Any',\n          source: 'Any',\n        };\n      }\n\n      this.addOptionalImport = true;\n      return {\n        id,\n        source: `Optional[${id}]`,\n      };\n    }\n\n    // Defined\n    this.addOptionalImport = true;\n    return {\n      id: name,\n      source: `Optional['${name}']`,\n    };\n  }\n\n  ListType(node: ListTypeNode) {\n    this.addListImport = true;\n    this.addOptionalImport = true;\n\n    const { type } = node as any;\n\n    return {\n      id: type.id,\n      source: `Optional[List[${type.source}]]`,\n    };\n  }\n\n  NonNullType(node: NonNullTypeNode) {\n    const { type } = node as any;\n\n    return {\n      id: type.id,\n      source: this.clearOptional(type.source),\n    };\n  }\n\n  protected visitFieldOrInputDefinition(node: any) {\n    const argName = node.name as any;\n\n    const { type, directives } = node as any;\n\n    // Handle deprecated\n    // const ds = directives.map((d: any) => d.name);\n    // if (ds.includes('deprecated')) {\n    //  return null;\n    // }\n\n    // Need to alias some field names\n    // Otherwise pydantic throws\n    if (RESERVED.includes(argName)) {\n      this.addFieldImport = true;\n      return {\n        id: type.id,\n        source: indent(\n          `${argName}_: ${type.source} = Field(None, alias='${argName}')`,\n          2,\n        ),\n      };\n    }\n\n    return {\n      id: type.id,\n      source: indent(`${argName}: ${type.source}`, 2),\n    };\n  }\n\n  FieldDefinition(node: FieldDefinitionNode) {\n    return this.visitFieldOrInputDefinition(node);\n  }\n\n  InputValueDefinition(node: InputValueDefinitionNode) {\n    return this.visitFieldOrInputDefinition(node);\n  }\n\n  EnumTypeDefinition(node: EnumTypeDefinitionNode) {\n    this.addEnumImport = true;\n\n    const { name, values } = node as any;\n\n    const val = values\n      .map((v: any) => indent(`${v.name} = '${v.name}'`, 2))\n      .join('\\n');\n    const source = `class ${name}(StrEnum):\\n${val}`;\n\n    this.upsertGraphNode(name);\n\n    return {\n      id: name,\n      source,\n    };\n  }\n\n  UnionTypeDefinition(node: UnionTypeDefinitionNode) {\n    this.addUnionImport = true;\n\n    const { name, types } = node as any;\n\n    const unionTypes = (types ?? []).map((t: any) =>\n      this.clearOptional(t.source),\n    );\n\n    this.addGraphNodeDeps(\n      name,\n      types.map((t: any) => t.id),\n    );\n\n    return {\n      id: name,\n      source: `${name} = Union[${unionTypes.join(', ')}]`,\n    };\n  }\n\n  InterfaceTypeDefinition(node: InterfaceTypeDefinitionNode) {\n    const { name, fields: rawFields } = node as any;\n\n    const fields = rawFields.filter((f: any) => f);\n\n    const args = fields.map((f: any) => f.source).join('\\n');\n    const source = `class ${name}(BaseModel):\\n${args}`;\n\n    this.addGraphNodeDeps(\n      name,\n      fields.map((f: any) => f.id),\n    );\n\n    return {\n      id: name,\n      source,\n    };\n  }\n\n  ObjectTypeDefinition(node: ObjectTypeDefinitionNode) {\n    const { name, fields: rawFields, interfaces: rawInterfaces } = node as any;\n\n    const fields = rawFields.filter((f: any) => f);\n\n    const interfaces = rawInterfaces.map((n: any) =>\n      this.clearOptional(n.source).replace(/'/g, ''),\n    );\n\n    const impl = interfaces.length ? interfaces.join(', ') : 'BaseModel';\n\n    const args = fields.map((f: any) => f.source).join('\\n');\n    const source = `class ${name}(${impl}):\\n${args}`;\n\n    if (interfaces.length) {\n      this.addGraphNodeDeps(name, interfaces);\n    } else {\n      this.upsertGraphNode(name);\n    }\n\n    return {\n      id: name,\n      source,\n    };\n  }\n\n  InputObjectTypeDefinition(node: InputObjectTypeDefinitionNode) {\n    const { name, fields: rawFields } = node as any;\n\n    const fields = rawFields.filter((f: any) => f);\n\n    const args = fields.map((f: any) => f.source).join('\\n');\n    const source = `class ${name}(BaseModel):\\n${args}`;\n\n    this.upsertGraphNode(name);\n\n    return {\n      id: name,\n      source,\n    };\n  }\n\n  Document(node: DocumentNode) {\n    const { definitions } = node as any;\n\n    const nodesInOrder = this.graph.overallOrder();\n\n    return nodesInOrder\n      .map((n: any) => definitions.find((d: any) => d.id === n)?.source || '')\n      .join('\\n\\n\\n');\n  }\n}\n","import { parse, GraphQLSchema, printSchema, visit } from 'graphql';\nimport { PluginFunction, Types } from '@graphql-codegen/plugin-helpers';\n\nimport { PydanticVisitor } from './visitor';\nimport { PydanticPluginRawConfig } from './config';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const plugin: PluginFunction<PydanticPluginRawConfig> = async (\n  schema: GraphQLSchema,\n  documents: Types.DocumentFile[],\n  config: PydanticPluginRawConfig,\n  info,\n): Promise<string> => {\n  const visitor = new PydanticVisitor(config, schema);\n  const printedSchema = printSchema(schema);\n  const astNode = parse(printedSchema);\n\n  const visitorResult = visit(astNode, { leave: visitor as any });\n  const imports = visitor.getImports();\n\n  return `${imports}\\n\\n\\n${visitorResult}\\n`;\n};\n"],"names":["PYTHON_SCALARS","ID","String","Boolean","Int","Float","PYTHON_RESERVED","PYDANTIC_MODEL_RESERVED","RESERVED","concat","PydanticVisitor","BaseVisitor","constructor","rawConfig","schema","scalars","buildScalars","DepGraph","circular","getImports","typing","pydantic","addAnyImport","push","addOptionalImport","addListImport","addUnionImport","addFieldImport","enumInput","addEnumImport","typingImport","length","join","pydanticImport","filter","i","canAddGraphNode","id","Object","values","includes","upsertGraphNode","graph","hasNode","addNode","addGraphNodeDeps","ids","forEach","addDependency","clearOptional","str","startsWith","replace","Name","node","value","NamedType","name","keys","source","ListType","type","NonNullType","visitFieldOrInputDefinition","argName","directives","indent","FieldDefinition","InputValueDefinition","EnumTypeDefinition","val","map","v","UnionTypeDefinition","types","unionTypes","t","InterfaceTypeDefinition","fields","rawFields","f","args","ObjectTypeDefinition","interfaces","rawInterfaces","n","impl","InputObjectTypeDefinition","Document","definitions","nodesInOrder","overallOrder","find","d","plugin","documents","config","info","visitor","printedSchema","printSchema","astNode","parse","visitorResult","visit","leave","imports"],"mappings":"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"}